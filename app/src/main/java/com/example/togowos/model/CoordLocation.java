/*
 * Reseplaneraren
 * Provides access to VÃ¤sttrafik journey planner
 *
 * OpenAPI spec version: 1.10.1
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.example.togowos.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.example.togowos.Api.*;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * CoordLocation
 */
public class CoordLocation {
  @SerializedName("lon")
  private String lon = null;

  @SerializedName("idx")
  private String idx = null;

  @SerializedName("name")
  private String name = null;

  @SerializedName("type")
  private String type = null;

  @SerializedName("lat")
  private String lat = null;

  public CoordLocation lon(String lon) {
    this.lon = lon;
    return this;
  }

   /**
   * The WGS84 longitude
   * @return lon
  **/
  @ApiModelProperty(required = true, value = "The WGS84 longitude")
  public String getLon() {
    return lon;
  }

  public void setLon(String lon) {
    this.lon = lon;
  }

  public CoordLocation idx(String idx) {
    this.idx = idx;
    return this;
  }

   /**
   * This index can be used to reorder the StopLocations and CoordLocations in JSON format response to their correct order. IN JSON you can receive two arrays, one for Stops and one for Addresses. This attribute is only contained in reponses to the location.name request. The location with idx&#x3D;1 is the best fitting location.
   * @return idx
  **/
  @ApiModelProperty(required = true, value = "This index can be used to reorder the StopLocations and CoordLocations in JSON format response to their correct order. IN JSON you can receive two arrays, one for Stops and one for Addresses. This attribute is only contained in reponses to the location.name request. The location with idx=1 is the best fitting location.")
  public String getIdx() {
    return idx;
  }

  public void setIdx(String idx) {
    this.idx = idx;
  }

  public CoordLocation name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Contains the output name of the address or point of interest
   * @return name
  **/
  @ApiModelProperty(required = true, value = "Contains the output name of the address or point of interest")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public CoordLocation type(String type) {
    this.type = type;
    return this;
  }

   /**
   * The attribute type specifies the type of location. Valid values are ADR (address) or POI (point of interest). This attribute can be used to do some sort of classification in the user interface. For later trip requests it does not have any meaning.
   * @return type
  **/
  @ApiModelProperty(required = true, value = "The attribute type specifies the type of location. Valid values are ADR (address) or POI (point of interest). This attribute can be used to do some sort of classification in the user interface. For later trip requests it does not have any meaning.")
  public String getType() {
    return type;
  }

  public void setType(String type) {
    this.type = type;
  }

  public CoordLocation lat(String lat) {
    this.lat = lat;
    return this;
  }

   /**
   * The WGS84 latitude
   * @return lat
  **/
  @ApiModelProperty(required = true, value = "The WGS84 latitude")
  public String getLat() {
    return lat;
  }

  public void setLat(String lat) {
    this.lat = lat;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CoordLocation coordLocation = (CoordLocation) o;
    return Objects.equals(this.lon, coordLocation.lon) &&
        Objects.equals(this.idx, coordLocation.idx) &&
        Objects.equals(this.name, coordLocation.name) &&
        Objects.equals(this.type, coordLocation.type) &&
        Objects.equals(this.lat, coordLocation.lat);
  }

  @Override
  public int hashCode() {
    return Objects.hash(lon, idx, name, type, lat);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CoordLocation {\n");

    sb.append("    lon: ").append(toIndentedString(lon)).append("\n");
    sb.append("    idx: ").append(toIndentedString(idx)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    lat: ").append(toIndentedString(lat)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

