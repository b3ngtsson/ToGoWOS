/*
 * Reseplaneraren
 * Provides access to VÃ¤sttrafik journey planner
 *
 * OpenAPI spec version: 1.10.1
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.example.togowos.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.example.togowos.Api.*;
import io.swagger.annotations.ApiModelProperty;
import com.example.togowos.model.Color;
import com.example.togowos.model.Direction;
import com.example.togowos.model.GeometryRef;
import com.example.togowos.model.JourneyId;
import com.example.togowos.model.JourneyName;
import com.example.togowos.model.JourneyType;
import com.example.togowos.model.Stop;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import org.threeten.bp.LocalDate;

/**
 * JourneyDetail
 */
public class JourneyDetail {
  @SerializedName("JourneyType")
  private JourneyType journeyType = null;

  @SerializedName("errorText")
  private String errorText = null;

  @SerializedName("error")
  private String error = null;

  @SerializedName("serverdate")
  private LocalDate serverdate = null;

  @SerializedName("servertime")
  private String servertime = null;

  @SerializedName("JourneyId")
  private JourneyId journeyId = null;

  @SerializedName("Direction")
  private Direction direction = null;

  @SerializedName("Stop")
  private List<Stop> stop = null;

  @SerializedName("JourneyName")
  private JourneyName journeyName = null;

  @SerializedName("GeometryRef")
  private GeometryRef geometryRef = null;

  @SerializedName("Color")
  private Color color = null;

  @SerializedName("noNamespaceSchemaLocation")
  private String noNamespaceSchemaLocation = null;

  public JourneyDetail journeyType(JourneyType journeyType) {
    this.journeyType = journeyType;
    return this;
  }

   /**
   * Get journeyType
   * @return journeyType
  **/
  @ApiModelProperty(value = "")
  public JourneyType getJourneyType() {
    return journeyType;
  }

  public void setJourneyType(JourneyType journeyType) {
    this.journeyType = journeyType;
  }

  public JourneyDetail errorText(String errorText) {
    this.errorText = errorText;
    return this;
  }

   /**
   * Get errorText
   * @return errorText
  **/
  @ApiModelProperty(value = "")
  public String getErrorText() {
    return errorText;
  }

  public void setErrorText(String errorText) {
    this.errorText = errorText;
  }

  public JourneyDetail error(String error) {
    this.error = error;
    return this;
  }

   /**
   * Get error
   * @return error
  **/
  @ApiModelProperty(value = "")
  public String getError() {
    return error;
  }

  public void setError(String error) {
    this.error = error;
  }

  public JourneyDetail serverdate(LocalDate serverdate) {
    this.serverdate = serverdate;
    return this;
  }

   /**
   * Get serverdate
   * @return serverdate
  **/
  @ApiModelProperty(value = "")
  public LocalDate getServerdate() {
    return serverdate;
  }

  public void setServerdate(LocalDate serverdate) {
    this.serverdate = serverdate;
  }

  public JourneyDetail servertime(String servertime) {
    this.servertime = servertime;
    return this;
  }

   /**
   * Current server time in format HH:MM
   * @return servertime
  **/
  @ApiModelProperty(value = "Current server time in format HH:MM")
  public String getServertime() {
    return servertime;
  }

  public void setServertime(String servertime) {
    this.servertime = servertime;
  }

  public JourneyDetail journeyId(JourneyId journeyId) {
    this.journeyId = journeyId;
    return this;
  }

   /**
   * Get journeyId
   * @return journeyId
  **/
  @ApiModelProperty(value = "")
  public JourneyId getJourneyId() {
    return journeyId;
  }

  public void setJourneyId(JourneyId journeyId) {
    this.journeyId = journeyId;
  }

  public JourneyDetail direction(Direction direction) {
    this.direction = direction;
    return this;
  }

   /**
   * Get direction
   * @return direction
  **/
  @ApiModelProperty(value = "")
  public Direction getDirection() {
    return direction;
  }

  public void setDirection(Direction direction) {
    this.direction = direction;
  }

  public JourneyDetail stop(List<Stop> stop) {
    this.stop = stop;
    return this;
  }

  public JourneyDetail addStopItem(Stop stopItem) {
    if (this.stop == null) {
      this.stop = new ArrayList<Stop>();
    }
    this.stop.add(stopItem);
    return this;
  }

   /**
   * Get stop
   * @return stop
  **/
  @ApiModelProperty(value = "")
  public List<Stop> getStop() {
    return stop;
  }

  public void setStop(List<Stop> stop) {
    this.stop = stop;
  }

  public JourneyDetail journeyName(JourneyName journeyName) {
    this.journeyName = journeyName;
    return this;
  }

   /**
   * Get journeyName
   * @return journeyName
  **/
  @ApiModelProperty(value = "")
  public JourneyName getJourneyName() {
    return journeyName;
  }

  public void setJourneyName(JourneyName journeyName) {
    this.journeyName = journeyName;
  }

  public JourneyDetail geometryRef(GeometryRef geometryRef) {
    this.geometryRef = geometryRef;
    return this;
  }

   /**
   * Get geometryRef
   * @return geometryRef
  **/
  @ApiModelProperty(value = "")
  public GeometryRef getGeometryRef() {
    return geometryRef;
  }

  public void setGeometryRef(GeometryRef geometryRef) {
    this.geometryRef = geometryRef;
  }

  public JourneyDetail color(Color color) {
    this.color = color;
    return this;
  }

   /**
   * Get color
   * @return color
  **/
  @ApiModelProperty(value = "")
  public Color getColor() {
    return color;
  }

  public void setColor(Color color) {
    this.color = color;
  }

  public JourneyDetail noNamespaceSchemaLocation(String noNamespaceSchemaLocation) {
    this.noNamespaceSchemaLocation = noNamespaceSchemaLocation;
    return this;
  }

   /**
   * Get noNamespaceSchemaLocation
   * @return noNamespaceSchemaLocation
  **/
  @ApiModelProperty(required = true, value = "")
  public String getNoNamespaceSchemaLocation() {
    return noNamespaceSchemaLocation;
  }

  public void setNoNamespaceSchemaLocation(String noNamespaceSchemaLocation) {
    this.noNamespaceSchemaLocation = noNamespaceSchemaLocation;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    JourneyDetail journeyDetail = (JourneyDetail) o;
    return Objects.equals(this.journeyType, journeyDetail.journeyType) &&
        Objects.equals(this.errorText, journeyDetail.errorText) &&
        Objects.equals(this.error, journeyDetail.error) &&
        Objects.equals(this.serverdate, journeyDetail.serverdate) &&
        Objects.equals(this.servertime, journeyDetail.servertime) &&
        Objects.equals(this.journeyId, journeyDetail.journeyId) &&
        Objects.equals(this.direction, journeyDetail.direction) &&
        Objects.equals(this.stop, journeyDetail.stop) &&
        Objects.equals(this.journeyName, journeyDetail.journeyName) &&
        Objects.equals(this.geometryRef, journeyDetail.geometryRef) &&
        Objects.equals(this.color, journeyDetail.color) &&
        Objects.equals(this.noNamespaceSchemaLocation, journeyDetail.noNamespaceSchemaLocation);
  }

  @Override
  public int hashCode() {
    return Objects.hash(journeyType, errorText, error, serverdate, servertime, journeyId, direction, stop, journeyName, geometryRef, color, noNamespaceSchemaLocation);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class JourneyDetail {\n");

    sb.append("    journeyType: ").append(toIndentedString(journeyType)).append("\n");
    sb.append("    errorText: ").append(toIndentedString(errorText)).append("\n");
    sb.append("    error: ").append(toIndentedString(error)).append("\n");
    sb.append("    serverdate: ").append(toIndentedString(serverdate)).append("\n");
    sb.append("    servertime: ").append(toIndentedString(servertime)).append("\n");
    sb.append("    journeyId: ").append(toIndentedString(journeyId)).append("\n");
    sb.append("    direction: ").append(toIndentedString(direction)).append("\n");
    sb.append("    stop: ").append(toIndentedString(stop)).append("\n");
    sb.append("    journeyName: ").append(toIndentedString(journeyName)).append("\n");
    sb.append("    geometryRef: ").append(toIndentedString(geometryRef)).append("\n");
    sb.append("    color: ").append(toIndentedString(color)).append("\n");
    sb.append("    noNamespaceSchemaLocation: ").append(toIndentedString(noNamespaceSchemaLocation)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

