/*
 * Reseplaneraren
 * Provides access to VÃ¤sttrafik journey planner
 *
 * OpenAPI spec version: 1.10.1
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.example.togowos.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.example.togowos.Api.*;
import io.swagger.annotations.ApiModelProperty;
import com.example.togowos.model.Vehicle;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import org.threeten.bp.LocalDate;

/**
 * LiveMap
 */
public class LiveMap {
  @SerializedName("time")
  private LocalDate time = null;

  @SerializedName("maxx")
  private Double maxx = null;

  @SerializedName("maxy")
  private Double maxy = null;

  @SerializedName("vehicles")
  private List<Vehicle> vehicles = new ArrayList<Vehicle>();

  @SerializedName("minx")
  private Double minx = null;

  @SerializedName("miny")
  private Double miny = null;

  public LiveMap time(LocalDate time) {
    this.time = time;
    return this;
  }

   /**
   * Current server time
   * @return time
  **/
  @ApiModelProperty(required = true, value = "Current server time")
  public LocalDate getTime() {
    return time;
  }

  public void setTime(LocalDate time) {
    this.time = time;
  }

  public LiveMap maxx(Double maxx) {
    this.maxx = maxx;
    return this;
  }

   /**
   * Right border (longitude) of the bounding box in WGS84 * 1000000
   * @return maxx
  **/
  @ApiModelProperty(required = true, value = "Right border (longitude) of the bounding box in WGS84 * 1000000")
  public Double getMaxx() {
    return maxx;
  }

  public void setMaxx(Double maxx) {
    this.maxx = maxx;
  }

  public LiveMap maxy(Double maxy) {
    this.maxy = maxy;
    return this;
  }

   /**
   * Upper border (latitude) of the bounding box in WGS84 * 1000000
   * @return maxy
  **/
  @ApiModelProperty(required = true, value = "Upper border (latitude) of the bounding box in WGS84 * 1000000")
  public Double getMaxy() {
    return maxy;
  }

  public void setMaxy(Double maxy) {
    this.maxy = maxy;
  }

  public LiveMap vehicles(List<Vehicle> vehicles) {
    this.vehicles = vehicles;
    return this;
  }

  public LiveMap addVehiclesItem(Vehicle vehiclesItem) {
    this.vehicles.add(vehiclesItem);
    return this;
  }

   /**
   * Get vehicles
   * @return vehicles
  **/
  @ApiModelProperty(required = true, value = "")
  public List<Vehicle> getVehicles() {
    return vehicles;
  }

  public void setVehicles(List<Vehicle> vehicles) {
    this.vehicles = vehicles;
  }

  public LiveMap minx(Double minx) {
    this.minx = minx;
    return this;
  }

   /**
   * Left border (longitude) of the bounding box in WGS84 * 1000000
   * @return minx
  **/
  @ApiModelProperty(required = true, value = "Left border (longitude) of the bounding box in WGS84 * 1000000")
  public Double getMinx() {
    return minx;
  }

  public void setMinx(Double minx) {
    this.minx = minx;
  }

  public LiveMap miny(Double miny) {
    this.miny = miny;
    return this;
  }

   /**
   * Lower border (latitude) of the bounding box in WGS84 * 1000000
   * @return miny
  **/
  @ApiModelProperty(required = true, value = "Lower border (latitude) of the bounding box in WGS84 * 1000000")
  public Double getMiny() {
    return miny;
  }

  public void setMiny(Double miny) {
    this.miny = miny;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    LiveMap liveMap = (LiveMap) o;
    return Objects.equals(this.time, liveMap.time) &&
        Objects.equals(this.maxx, liveMap.maxx) &&
        Objects.equals(this.maxy, liveMap.maxy) &&
        Objects.equals(this.vehicles, liveMap.vehicles) &&
        Objects.equals(this.minx, liveMap.minx) &&
        Objects.equals(this.miny, liveMap.miny);
  }

  @Override
  public int hashCode() {
    return Objects.hash(time, maxx, maxy, vehicles, minx, miny);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class LiveMap {\n");

    sb.append("    time: ").append(toIndentedString(time)).append("\n");
    sb.append("    maxx: ").append(toIndentedString(maxx)).append("\n");
    sb.append("    maxy: ").append(toIndentedString(maxy)).append("\n");
    sb.append("    vehicles: ").append(toIndentedString(vehicles)).append("\n");
    sb.append("    minx: ").append(toIndentedString(minx)).append("\n");
    sb.append("    miny: ").append(toIndentedString(miny)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

