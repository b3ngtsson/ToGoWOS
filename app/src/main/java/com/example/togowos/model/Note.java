/*
 * Reseplaneraren
 * Provides access to VÃ¤sttrafik journey planner
 *
 * OpenAPI spec version: 1.10.1
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.example.togowos.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.example.togowos.Api.*;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * Note
 */
public class Note {
  @SerializedName("priority")
  private String priority = null;

  /**
   * Severity of this note, can be high, normal or low
   */
  @JsonAdapter(SeverityEnum.Adapter.class)
  public enum SeverityEnum {
    HIGH("high"),

    NORMAL("normal"),

    LOW("low");

    private String value;

    SeverityEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static SeverityEnum fromValue(String text) {
      for (SeverityEnum b : SeverityEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

    public static class Adapter extends TypeAdapter<SeverityEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final SeverityEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public SeverityEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return SeverityEnum.fromValue(String.valueOf(value));
      }
    }
  }

  @SerializedName("severity")
  private SeverityEnum severity = null;

  @SerializedName("key")
  private String key = null;

  public Note priority(String priority) {
    this.priority = priority;
    return this;
  }

   /**
   * Priority of the note which can be used to order the notes in the list.
   * @return priority
  **/
  @ApiModelProperty(required = true, value = "Priority of the note which can be used to order the notes in the list.")
  public String getPriority() {
    return priority;
  }

  public void setPriority(String priority) {
    this.priority = priority;
  }

  public Note severity(SeverityEnum severity) {
    this.severity = severity;
    return this;
  }

   /**
   * Severity of this note, can be high, normal or low
   * @return severity
  **/
  @ApiModelProperty(required = true, value = "Severity of this note, can be high, normal or low")
  public SeverityEnum getSeverity() {
    return severity;
  }

  public void setSeverity(SeverityEnum severity) {
    this.severity = severity;
  }

  public Note key(String key) {
    this.key = key;
    return this;
  }

   /**
   * Type of this note
   * @return key
  **/
  @ApiModelProperty(value = "Type of this note")
  public String getKey() {
    return key;
  }

  public void setKey(String key) {
    this.key = key;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Note note = (Note) o;
    return Objects.equals(this.priority, note.priority) &&
        Objects.equals(this.severity, note.severity) &&
        Objects.equals(this.key, note.key);
  }

  @Override
  public int hashCode() {
    return Objects.hash(priority, severity, key);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Note {\n");

    sb.append("    priority: ").append(toIndentedString(priority)).append("\n");
    sb.append("    severity: ").append(toIndentedString(severity)).append("\n");
    sb.append("    key: ").append(toIndentedString(key)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

